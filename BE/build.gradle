buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.danbi'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.8")
}

dependencies {
	// spring data jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// spring validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// spring web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// spring cloud openfeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// spring-cloud-starter-aws
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	// jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	// spring cloud openfeing
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor("org.springframework.boot:spring-boot-starter-data-jpa")
	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

	// h2 db
	runtimeOnly 'com.h2database:h2'
	// mysql db
	runtimeOnly 'com.mysql:mysql-connector-j'
//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
//	implementation 'mysql:mysql-connector-java'

	// spring test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//FCM
	implementation 'com.google.firebase:firebase-admin:7.1.1'
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// embedded redis(test)
//	testImplementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
	// querydsl dependencies
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


jar{
	enabled = false
}

// script for querydsl
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
